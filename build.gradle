buildscript {
    // Have to apply this separately here (as well as below)
    // See https://discuss.gradle.org/t/accessing-ext-properties-from-within-buildscript-closure/3603
    apply from: 'versions.gradle'

    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        // Provides tasks for running via Gradle
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}"
    }
}

apply from: 'versions.gradle'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

configurations {
    // We're using embedded Jetty server, not Tomcat
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    // Not sure all this stuff DEFINITELY has to be in this configuration, but haven't had time
    // to experiment
    compile(
        "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}",
        "org.springframework.boot:spring-boot-starter-actuator:${versions.springBoot}",

        "org.springframework.boot:spring-boot-starter-security:${versions.springBoot}",
        "org.springframework.boot:spring-boot-starter-thymeleaf:${versions.springBoot}",
        "org.springframework.boot:spring-boot-starter-mail:${versions.springBoot}",
    
        "org.springframework.data:spring-data-jpa:${versions.springDataJpa}",
        "org.hibernate:hibernate-entitymanager:${versions.hibernateEntityManager}",
        "com.h2database:h2:${versions.h2}",
        
        "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:${versions.thymeleafLayoutDialect}",
        
        "jaf:activation:${versions.activation}"
    )
    
    providedCompile "org.springframework.boot:spring-boot-starter-jetty:${versions.springBoot}"
    
    testCompile(
        "junit:junit:${versions.junit}",
        "org.hamcrest:hamcrest-library:${versions.hamcrestLibrary}",
        "org.springframework:spring-test:${versions.springTest}"
    )
   
    testRuntime "com.jayway.jsonpath:json-path:${versions.jsonPath}"
    
    runtime "org.postgresql:postgresql:${versions.postgresql}"
}

// Change context path (base url). otherwise defaults to name of project
jettyRunWar.contextPath = ''

test {
    environment['SPRING_PROFILES_ACTIVE'] = 'test'
}

bootRun {
    // For passing arguments to the application: gradlew bootRun -Pargs="some list of stuff like this"
    if(project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
    
    // For remote debugging: gradlew bootRun -Pdebug
    if(project.hasProperty('debug')) {
        jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y']
    }
}
