buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        // Provides tasks for running via Gradle
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE'
        
        // Provides tasks for deploying to PWS via Gradle
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.0.4'
    }
}


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'cloudfoundry'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

configurations {
    // We're using embedded Jetty server, not Tomcat
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    // Not sure all this stuff DEFINITELY has to be in this configuration, but haven't had time
    // to experiment
    compile(
        'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.boot:spring-boot-starter-actuator',

	    'org.springframework.boot:spring-boot-starter-security',
	    'org.springframework.boot:spring-boot-starter-thymeleaf',
	    'org.springframework.boot:spring-boot-starter-mail',
    
        'org.springframework.data:spring-data-jpa:1.7.2.RELEASE',
        'org.hibernate:hibernate-entitymanager:4.3.8.Final',
        'com.h2database:h2:1.4.185',
        
        'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.7',
        
        'jaf:activation:1.0.2'
    )
    
    providedCompile 'org.springframework.boot:spring-boot-starter-jetty'
    
    testCompile(
        'junit:junit:4.12',
        'org.hamcrest:hamcrest-library:1.3',
        'org.springframework:spring-test:4.1.4.RELEASE'
    )
   
    testRuntime 'com.jayway.jsonpath:json-path:1.2.0'
    
    runtime 'org.postgresql:postgresql:9.4-1201-jdbc41'
}

// Change context path (base url). otherwise defaults to name of project
jettyRunWar.contextPath = ''

test {
    environment['SPRING_PROFILES_ACTIVE'] = 'test'
}

bootRun {
    // For passing arguments to the application: gradlew bootRun -Pargs="some list of stuff like this"
    if(project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
    
    // For remote debugging: gradlew bootRun -Pdebug
    if(project.hasProperty('debug')) {
        jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y']
    }
}

// User credentials should be in $GRADLE_USER_HOME/gradle.properties
cloudfoundry {
    target = 'https://api.run.pivotal.io'
    space = 'development'
    file = file('build/libs/attendance.war')
    uri = 'attendance.cfapps.io'
    memory = 2048
    instances = 1
    env = [
        'SPRING_PROFILES_ACTIVE': 'prod'
    ]
    services {
        'mail' {
            label = 'SendGrid'
            plan = 'Free Package'
            bind = true
        }
        'sql' {
            label = 'ElephantSQL'
            plan = 'Tiny Turtle'
            bind = true
        }
    }
      
    // Give me time to check the configuration above
    startApp = false
 }